import java.util.Stack;

class QueueWithTwoStack<Item>{
  private Stack<Item> input = new Stack<Item>();
  private Stack<Item> output = new Stack<Item>();
  
  public QueueWithTwoStack(){
  }
  
  public int size(){
    return input.size() + output.size();
  }
  
  public boolean isEmpty(){
    return size == 0;
  }
  
  public void enqueue(Item item){
    if(item == null)
      throw new java.lang.NullPointerException();
    input.push(item);
  }
  
  public Item dequeue(){
    if(isEmpty())
      throw new java.util.NoSuchElementException();
    if(output.isEmpty()){
      while(input.isEmpty()){
        output.push(input.pop());
      }
    }
    return output.pop();
  }
  
  
}
